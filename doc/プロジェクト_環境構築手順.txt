■プロジェクト環境構築手順


①ディレクトリ作成
コマンド：mkdir プロジェクト名


②package.json作成
コマンド：npm init -y


③Expressインストール
コマンド：npm install express


④Typescriptと開発用パッケージのインストール
コマンド：npm install -D typescript ts-node @types/node @types/express


⑤tsconfig.json作成
コマンド：npx tsc --init


⑥tsconfig.jsonの設定変更
以下の設定で上書きする
{
  "compilerOptions": {
    "target": "es6",
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "allowJs": true,
    "skipLibCheck": true,
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    "strict": true,
    "forceConsistentCasingInFileNames": true,
    "noFallthroughCasesInSwitch": true,
    "module": "commonjs",
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "noEmit": true,
    "jsx": "react-jsx"
  }
}


⑦package.jsonの設定変更
{
  "name": "プロジェクト名",
  "version": "1.0.0",
  "main": "index.js",
  "scripts": {
    "start": "npx ts-node server/index.ts",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "description": "",
  "dependencies": {
    "bcrypt": "^5.1.1",
    "express": "^4.21.1",
    "jsonwebtoken": "^9.0.2",
    "zod": "^3.24.1"
  },
  "devDependencies": {
    "@types/axios": "^0.14.4",
    "@types/bcrypt": "^5.0.2",
    "@types/express": "^5.0.0",
    "@types/node": "^22.10.1",
    "ts-node": "^10.9.2",
    "typescript": "^5.7.2"
  }
}


⑧server/index.ts を作成
index.ts内に以下を貼り付け
import express from "express";

const app = express();
const PORT = 3000;

app.get("/", (req, res) => {
  res.send("Hello, Express with TypeScript!");
});

app.listen(PORT, () => {
  console.log(`Server is running at http://localhost:${PORT}`);
});


⑨.gitignoreの作成
※.gitignore内に以下を貼り付け
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.js

# testing
/coverage

# production
/build

# misc
.DS_Store
.env.local
.env.development.local
.env.test.local
.env.production.local

npm-debug.log*
yarn-debug.log*
yarn-error.log*


⑩プロジェクトのルートフォルダに.envファイルを作成して以下の設定を記載する
DATABASE_URL=データベースのURL
YOUTUBE_API_KEY=YouTube Data APIのキー
VIDEOMNG_JWT_KEY=jwtのキー
PORT=3001
CORS_PROTOCOL=http://
CORS_DOMAIN=localhost:
CORS_PORT=5173
COOKIE_KEY_JWT=jwt
TIMEOUT=10000
ALLOW_USER_OPERATION=true
ENV_PRODUCTION=false

※CORS_PORTはフロントのポート番号を指定
※ALLOW_USER_OPERATION：デモ環境ではfalseを設定
※ENV_PRODUCTION：デモ環境ではtrueを設定

⑪sqlフォルダ内のクエリを実行する
※create_function_update_favorite_video_transaction_update_date.sqlとcreate_triggers_for_update_favorite_video_transaction_update_date.sqlについては、
以下の順で実行すること
1. create_function_update_favorite_video_transaction_update_date.sql
2. create_triggers_for_update_favorite_video_transaction_update_date.sql










