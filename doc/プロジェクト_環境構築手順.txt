■プロジェクト_環境構築手順

①作業フォルダ配下でプロジェクトをクローンする
git clone https://github.com/GitHubユーザー名/リポジトリ名.git


②プロジェクトルートに移動して以下のコマンドでライブラリをインストールする
cd リポジトリ名
npm install


③DB（PostgreSQL）を作成する
PostgreSQL に接続して以下を実行
CREATE DATABASE DB名;


④プロジェクトルートに環境変数ファイル .env を作成する（または内容を修正する）
DATABASE_URL=postgresql://<ユーザー名>:<パスワード>@<ホスト>:<ポート>/<データベース名>?<オプション>

| 部分                  | 値       | 説明                                      |
| ------------------- | ------- | --------------------------------------- |
| `postgresql://`     | -       | PostgreSQL 用の接続プロトコル                    |
| `postgres`          | ユーザー名   | データベースにログインするユーザー（スーパーユーザー）             |
| `root`              | パスワード   | 上記ユーザーのパスワード                            |
| `localhost`         | ホスト     | DB サーバの場所（ローカルPCの場合は localhost）         |
| `5432`              | ポート番号   | PostgreSQL のデフォルトポート                    |
| `reference_db`      | データベース名 | 接続するデータベースの名前                           |
| `?schema=スキーマ名` | オプション   | デフォルトで使う **スキーマ** を指定 |


⑤プロジェクトのルートフォルダに.envファイルを作成して以下の設定を記載する
DATABASE_URL=データベースのURL
YOUTUBE_API_KEY=YouTube Data APIのキー
VIDEOMNG_JWT_KEY=jwtのキー
PORT=3001
CORS_PROTOCOL=http://
CORS_DOMAIN=localhost:
CORS_PORT=5173
TIMEOUT=10000
ALLOW_USER_OPERATION=true
ENV_PRODUCTION=false
ACCESS_TOKEN_EXPIRES=1h

※CORS_PORTはフロントのポート番号を指定
※ALLOW_USER_OPERATION：デモ環境ではfalseを設定
※ENV_PRODUCTION：デモ環境ではtrueを設定
※ユーザー名やパスワードは自分の環境に合わせて変更する


⑥以下のコマンドでマイグレーションを実行してテーブルを作成する
npx prisma migrate dev --name init


⑦Prisma Client を生成する（自動生成されていない場合）
npx prisma generate


⑧sqlフォルダ内のクエリを実行する
※create_function_update_favorite_video_transaction_update_date.sqlとcreate_triggers_for_update_favorite_video_transaction_update_date.sqlについては、
以下の順で実行すること
1. create_function_update_favorite_video_transaction_update_date.sql
2. create_triggers_for_update_favorite_video_transaction_update_date.sql


⑨アプリケーションを起動する
npm start